//club

using System;
using System.Collections.Generic;
using System.Diagnostics.Metrics;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fitness
{
    internal class Club
    {
        string name;
        String address;
        List<Member> members;

        public Club(string name, string address)
        {
            this.name = name;
            this.address = address;
            members = new List<Member>();
        }

        public void addMember(Member member)
        {
            members.Add(member);
        }

        public Member searchForMember(string id)
        {
            for (int i = 0; i < members.Count; i++)
            {
                if (members[i].Id == id)
                    return members[i];
            }
            return null;
        }

        public void checkIn(Member member)
        {
            Member m = searchForMember(member.Id);
            if (m != null)
            {
                try
                {
                    m.Checkin(this);
                    Console.WriteLine("You have successfully checked in");
                }
                catch (Exception e)
                {
                    Console.WriteLine("The member does not belong to this club");
                }
            }
            else
            {
                Console.WriteLine("The member does not belong to this club");
            }
        }
    }
}

//members

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fitness
{
    abstract class Member
    {
        string id;
        string name;
        protected double bill;
        protected const double serviceCharge = 50;
        public double Bill { get { return bill; } set { bill = value; } }

        public string Id { get { return id; } set { id = value; } }
        public string Name { get { return name; } set { name = value; } }

        public Member(string id, string name)
        {
            this.id = id;
            this.name = name;
            bill = 0;
        }

        public abstract void Checkin(Club club);
    }
}


// multi club members

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fitness
{
    internal class MultiClubMember : Member
    {
        int points;
        public MultiClubMember(string id, string name) :
            base(id, name)
        {
            points = 0;
        }
        public override void Checkin(Club club)
        {
            points += 2;
            bill += serviceCharge;
        }
    }
}

// single club members

using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fitness
{
    internal class SingleClubMember : Member
    {
        Club club;

        public SingleClubMember(string id, string name, Club club) :
            base(id, name)
        {
            this.club = club;
        }

        public override void Checkin(Club club)
        {
            if (club != this.club)
                throw new Exception();
            bill += serviceCharge;
        }
    }
}



using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace Fitness
{
    internal class Club
    {
        string name;
        String address;
        List<Member> members;
        public string Name { get { return name; } }

        public Club(string name, string address)
        {
            this.name = name;
            this.address = address;
            members = new List<Member>();
        }

        public void addMember(Member member)
        {
            members.Add(member);
        }

        public Member searchForMember(int id)
        {
            for (int i = 0; i < members.Count; i++)
            {
                if (members[i].Id == id)
                    return members[i];
            }
            return null;
        }

        public void checkIn(Member member)
        {
            if (member is MultiClubMember)
            {
                member.Checkin(this);
                Console.WriteLine("You have successfully checked in");
                return;
            }
            Member m = searchForMember(member.Id);
            if (m != null)
            {
                try
                {
                    m.Checkin(this);
                    Console.WriteLine("You have successfully checked in");
                }
                catch (Exception e)
                {
                    Console.WriteLine(e);
                    Console.WriteLine("The member does not belong to this club");
                }
            }
            else
            {
                Console.WriteLine("The member does not belong to this club");
            }
        }

        public string ToString()
        {
            return "Name: " + name + " Address: " + address;
        }
    }
}



